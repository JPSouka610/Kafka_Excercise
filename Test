def transformations(data, smooth_interval=3, smooth_exp=0.3):
    """
    Aplica transformaciones adicionales a los datos de mercado:
    - Calcula promedios móviles simples (SMA) y exponenciales (EMA).
    - Realiza operaciones adicionales según sea necesario.

    Args:
        data (pd.DataFrame): Datos procesados como DataFrame.
        smooth_interval (int): Ventana para el cálculo del promedio móvil simple.
        smooth_exp (float): Factor de suavizado para el promedio móvil exponencial.

    Returns:
        pd.DataFrame: Datos transformados con nuevas columnas.
    """
    try:
        # Asegurarse de que las columnas necesarias están presentes
        if "close" not in data.columns:
            raise ValueError("La columna 'close' es necesaria para las transformaciones.")

        # Calcular promedio móvil simple (SMA)
        data["SMA"] = data["close"].rolling(window=smooth_interval).mean()

        # Calcular promedio móvil exponencial (EMA)
        data["EMA"] = data["close"].ewm(span=smooth_interval, adjust=False).mean()

        print("Transformaciones aplicadas correctamente.")
        return data

    except Exception as e:
        print(f"Error al aplicar transformaciones: {e}")
        return None

# Prueba de la función
import pandas as pd

# Datos simulados para prueba
data = pd.DataFrame({
    "symbol": ["BTCUSDT"] * 5,
    "close": [27345.67, 27350.55, 27360.1, 27340.0, 27370.0],
    "timestamp": pd.date_range(start="2023-03-21", periods=5, freq="T")
})

# Aplicar transformaciones
transformed_data = transformations(data)
if transformed_data is not None:
    print(transformed_data)
